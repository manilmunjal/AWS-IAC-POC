name: Terraform CI CD pipeline for Deploy AWS resources
run-name: ${{ github.actor }} has triggered the pipeline

on:
  workflow_dispatch:
    inputs:
      workspace:
        description: 'Select Terraform workspace'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod
      deployment_type:
        description: 'Select deployment type'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - destroy

env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-infra:
    name: terraform-ci-cd
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./Terraform-vpc

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./Terraform-vpc

      - name: Select the workspace
        run: |
          terraform workspace select ${{ github.event.inputs.workspace }} || terraform workspace new ${{ github.event.inputs.workspace }}
        working-directory: ./Terraform-vpc

      - name: Validate Terraform configuration
        run: terraform validate
        working-directory: ./Terraform-vpc

      - name: Plan Terraform deployment with specific tfvars
        run: |
          if [ "${{ github.event.inputs.deployment_type }}" == "destroy" ]; then
            # If destroy is selected, we plan for destruction
            terraform plan -destroy -var-file="${{ github.event.inputs.workspace }}.tfvars" -no-color
          else
            # Otherwise, plan for deployment
            if [ "${{ github.event.inputs.workspace }}" == "test" ]; then
              terraform plan -var-file="test.tfvars" -no-color
            elif [ "${{ github.event.inputs.workspace }}" == "prod" ]; then
              terraform plan -var-file="prod.tfvars" -no-color
            elif [ "${{ github.event.inputs.workspace }}" == "dev" ]; then
              terraform plan -var-file="dev.tfvars" -no-color
            else
              terraform plan -var-file="dev.tfvars" -no-color
            fi
          fi
        working-directory: ./Terraform-vpc

      - name: Apply Terraform changes
        run: |
          if [ "${{ github.event.inputs.deployment_type }}" == "destroy" ]; then
            # If destroy is selected, apply the destruction
            terraform destroy -var-file="${{ github.event.inputs.workspace }}.tfvars" -auto-approve -no-color
          else
            # Otherwise, apply the deployment
            if [ "${{ github.event.inputs.workspace }}" == "test" ]; then
              terraform apply -var-file="test.tfvars" -auto-approve -no-color
            elif [ "${{ github.event.inputs.workspace }}" == "prod" ]; then
              terraform apply -var-file="prod.tfvars" -auto-approve -no-color
            elif [ "${{ github.event.inputs.workspace }}" == "dev" ]; then
              terraform apply -var-file="dev.tfvars" -auto-approve -no-color
            else
              terraform apply -var-file="dev.tfvars" -auto-approve -no-color
            fi
          fi
        working-directory: ./Terraform-vpc
